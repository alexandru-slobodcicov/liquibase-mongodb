name: Release Extension to Sonatype

on:
  release:
    types: [published]

jobs:
    release:
      runs-on: ubuntu-latest
      steps:
        - uses: actions/checkout@v2

        - name: Set up Java for publishing to Maven Central Repository
          uses: actions/setup-java@v2
          with:
            java-version: '11'
            distribution: 'adopt'
            server-id: sonatype-nexus-staging
            server-username: MAVEN_USERNAME
            server-password: MAVEN_PASSWORD
            gpg-private-key: ${{ secrets.GPG_SECRET }}
            gpg-passphrase: GPG_PASSPHRASE

        - name: Download artifact
          id: download-artifact
          uses: dawidd6/action-download-artifact@v2
          with:
            github_token: ${{secrets.BOT_TOKEN}}
            workflow: create-release.yml
            name: release-files
            check_artifacts: true
            skip_unpack: false
            if_no_artifact_found: fail
            workflow_conclusion: ""

        - name: Publish to the Maven Central Repository
          run: mvn clean deploy:deploy-file -Dfile=${{ github.event.release.tag_name}} -Dmaven.test.skip -DgeneratePom=false -DrepositoryId=sonatype-nexus-staging -Dulr=file:../local_repo/snapshot -P release
          env:
            MAVEN_USERNAME: ${{ secrets.SONATYPE_USERNAME }}
            MAVEN_PASSWORD: ${{ secrets.SONATYPE_TOKEN }}
            GPG_PASSPHRASE: ${{ secrets.GPG_PASSPHRASE }}

    deploy_xsd:
      name: Upload xsds
      runs-on: ubuntu-20.04
      outputs:
        tag: ${{ steps.collect-data.outputs.tag }}
        version: ${{ needs.setup.outputs.version }}
      steps:
        - name: Download liquibase mongodb xsd
          uses: actions/checkout@v3
          with:
            # Relative path under $GITHUB_WORKSPACE to place the repository
            path: liquibase-mongodb
            repository: "liquibase/liquibase-mongodb"

        - name: Upload to s3
          env:
            AWS_ACCESS_KEY_ID: ${{ secrets.LIQUIBASEORIGIN_ACCESS_KEY_ID }}
            AWS_SECRET_ACCESS_KEY: ${{ secrets.LIQUIBASEORIGIN_SECRET_ACCESS_KEY }}
            AWS_DEFAULT_REGION: us-east-1
          # aws s3 sync syncs directories and S3 prefixes.
          run: |
            aws s3 sync liquibase-mongodb/src/main/resources/www.liquibase.org/xml/ns/mongodb/ s3://liquibaseorg-origin/xml/ns/mongodb/ --content-type application/octet-stream --only-show-errors

        - name: Index.htm file upload
          env:
            AWS_ACCESS_KEY_ID: ${{ secrets.LIQUIBASEORIGIN_ACCESS_KEY_ID }}
            AWS_SECRET_ACCESS_KEY: ${{ secrets.LIQUIBASEORIGIN_SECRET_ACCESS_KEY }}
            AWS_DEFAULT_REGION: us-east-1
          # List all xsd and htm files in repository. Copy index.htm to temporary folder
          # Add links for all xsd files to index.htm file (except liquibase-mongodb-latest.xsd and index.htm)
          # Sync index.htm with the s3
          run: |
            search_dir=liquibase-mongodb/src/main/resources/www.liquibase.org/xml/ns/mongodb
            filenames=`ls -1 $search_dir`
            mkdir index-file
            cp $search_dir/index.htm index-file/
            for entry in $filenames
            do
              if [[ "$entry" != "liquibase-mongodb-latest.xsd" ]] && [[ "$entry" != "index.htm" ]] ;then
                sed -ie "s/<\/ul>/  <li><a href=\"\/xml\/ns\/mongodb\/${entry}\">${entry}<\/a><\/li>\n<\/ul>/" index-file/index.htm
              fi
            done
            aws s3 sync index-file s3://liquibaseorg-origin/xml/ns/mongodb/ --only-show-errors