name: Release Extension (v2)
on:
  repository_dispatch:
    types: [liquibase-release]
  workflow_dispatch:
    inputs:
      liquibaseVersion:
        description: 'Liquibase Version'
        required: true
      extensionVersion:
        description: 'Extension Version (Defaults to Liquibase Version)'
        required: false

jobs:
  setup:
    name: Setup
    runs-on: ubuntu-latest
    outputs:
      liquibaseVersion: ${{ steps.collect-data.outputs.liquibaseVersion }}
      extensionVersion: ${{ steps.collect-data.outputs.extensionVersion }}
    steps:
      - name: Collect Data
        id: collect-data
        uses: actions/github-script@v4
        with:
          script: |
            if (context.payload.client_payload) {
                core.setOutput("liquibaseVersion", context.payload.client_payload.liquibaseVersion);
                core.setOutput("extensionVersion", context.payload.client_payload.liquibaseVersion);
            } else if (context.payload.inputs) {
                core.setOutput("liquibaseVersion", context.payload.inputs.liquibaseVersion);
                core.setOutput("extensionVersion", context.payload.inputs.extensionVersion || context.payload.inputs.liquibaseVersion);
            } else {
              core.setFailed('Unknown event type')
            }

      - run: |
          echo "Saw Liquibase version ${{ steps.collect-data.outputs.liquibaseVersion }}"
          echo "Saw Extension version ${{ steps.collect-data.outputs.extensionVersion }}"

  release-prepare:
    uses: liquibase/build-logic/.github/workflows/extension-release-prepare.yml@v0.3.2
    needs: [ setup ]
    secrets: inherit

  build:
    name: "Build and Test"
    runs-on: ubuntu-latest
    needs: [ setup, release-prepare]
    outputs:
      releaseSha: ${{ steps.get-release-sha.outputs.releaseSha }}
    steps:
      - uses: actions/checkout@v2
        with:
          persist-credentials: false # otherwise, the token used is the GITHUB_TOKEN, instead of your personal token
          fetch-depth: 0 # otherwise, you will fail to push refs to dest repo

      - name: Update branch with latest commits # needed for getting the latest pom.xml generated by release-prepare step
        run: |
          git pull origin ${{ env.GITHUB_REF_NAME }}
          git checkout HEAD~1

      - name: Cache Built Code
        uses: actions/cache@v2
        with:
          key: built-code-${{ github.run_id }}
          path: ./**/target

      - name: Set up JDK
        uses: actions/setup-java@v2
        with:
          java-version: '8'
          distribution: 'adopt'

      - name: Download and install liquibase-core.jar
        uses: dsaltares/fetch-gh-release-asset@master
        with:
          repo: "liquibase/liquibase"
          version: "tags/v${{ needs.setup.outputs.liquibaseVersion }}"
          file: "liquibase-core-${{ needs.setup.outputs.liquibaseVersion }}.jar"
          target: "liquibase-core.jar"
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Install liquibase-core.jar
        run: mvn -B org.apache.maven.plugins:maven-install-plugin:3.0.0-M1:install-file -Dfile=liquibase-core.jar

      - name: Get release SHA
        id: get-release-sha
        run: echo ::set-output name=releaseSha::$(git rev-parse HEAD)


      - name: Build and Unit Test
        run: mvn -B clean test package

      - name: Archive Test Results
        if: ${{ always() }}
        uses: actions/upload-artifact@v2
        with:
          name: test-reports-jdk
          path: ./**/target/surefire-reports

      - name: Save Artifacts
        uses: actions/upload-artifact@v2
        with:
          name: liquibase-mongodb
          path: |
            target/*.jar
            pom.xml

  integration-tests:
    name: Java ${{ matrix.java }}
    runs-on: ubuntu-latest
    needs: build
    strategy:
      matrix:
        java: [8, 11, 17]
        mongodb: [4]
    services:
      mongodb:
        image: mongo:${{ matrix.mongodb }}
        ports:
          - 27017-27019:27017-27019

    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK ${{ matrix.java }}
        uses: actions/setup-java@v2
        with:
          java-version: ${{ matrix.java }}
          distribution: 'adopt'
      - name: Test With Maven
        run: mvn clean verify -Prun-its --file pom.xml

  draft-release:
    needs: [ setup, build, integration-tests, release-prepare ]
    name: Draft Release
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Download Artifacts
        uses: actions/download-artifact@v2
        with:
          name: liquibase-mongodb

      - name: Release
        uses: softprops/action-gh-release@v1
        with:
          target_commitish: ${{ needs.build.outputs.releaseSha }}
          name: v${{ needs.setup.outputs.extensionVersion }}
          tag_name: liquibase-mongodb-${{ needs.setup.outputs.extensionVersion }}
          draft: true
          body: Support for Liquibase ${{ needs.setup.outputs.liquibaseVersion }}.
          files: target/liquibase-mongodb-*.jar
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  release-rollback:
    needs: [ setup, release-prepare, build, integration-tests, draft-release ]
    if: ${{ failure() }}
    uses: liquibase/build-logic/.github/workflows/extension-release-rollback.yml@v0.3.2
    secrets: inherit
